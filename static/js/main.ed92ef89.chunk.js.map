{"version":3,"sources":["components/videolist.jsx","components/contents.jsx","components/topbar.jsx","components/videoplay.jsx","app.jsx","index.js","service/youtube.js"],"names":["videolist","memo","video","snippet","onClickVideo","displayType","display","className","onClick","src","thumbnails","medium","url","title","channelTitle","Contents","videos","onVideoClick","map","id","Topbar","onSearch","inputRef","useRef","handleSearch","value","current","console","log","href","ref","type","onKeyPress","e","key","Videoplay","width","height","frameBorder","allowFullScreen","channelId","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","search","useCallback","query","then","useEffect","mostPopular","this","axios","create","baseURL","params","get","part","chart","maxResults","response","data","items","q","item","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed92ef89.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\n\nconst videolist = memo(({video, video : {snippet},onClickVideo, display}) => {\n    const displayType = display === 'list' ? 'keywordplay' : 'keywordlist'\n    return(\n    <li className={`${\"keyworddefault\"} ${displayType}`} onClick={()=>{onClickVideo(video);}}>\n        <span className=\"listimg\"><img src={snippet.thumbnails.medium.url}></img></span>\n        <span className=\"listtitle\">{snippet.title}</span>\n        <span className=\"listdesc\">{snippet.channelTitle}</span>\n    </li>  \n    )\n}\n)\n\nexport default videolist;","import React from 'react';\nimport Videolist from \"./videolist\";\n\nconst Contents = ({videos, onVideoClick, display}) => (\n    <ul>\n        {videos.map(video => (\n            <Videolist key={video.id} video={video} onClickVideo={onVideoClick} display={display} />\n        ))}\n    </ul>\n);\n\nexport default Contents;","import React, { memo, useRef } from 'react';\n\nconst Topbar = memo(\n    ({onSearch}) => {\n        const inputRef = useRef()\n    \n        const handleSearch = () => {\n            const value = inputRef.current.value\n            onSearch(value)\n            console.log(value)\n        }\n    \n        const onClick = () => {\n            handleSearch();\n        }\n    \n        const onKeyPress = (e) => {\n            if(e.key==='Enter'){\n                handleSearch();\n                \n            }\n        }   \n    \n        \n    \n        return (\n            <div className=\"topbar\">\n                <div className=\"home\">\n                    <a href=\"\"><h1>Youtube</h1></a>\n                </div>\n                <div className=\"search\" >\n                    <input ref={inputRef} type=\"text\" onKeyPress={onKeyPress} />\n                    <button onClick={onClick}>Go</button>\n                </div>\n                \n            </div>\n        );\n    }\n)\n\nexport default Topbar;","import React from 'react';\n\nconst Videoplay = ({video}) => (\n   <section className=\"videozone\">\n        <iframe id=\"ytplayer\" title=\"Youtube video player\" type=\"text/html\" width=\"100%\" height=\"405\"\n            src={`https://www.youtube.com/embed/${video.id}`}\n            frameBorder=\"0\" allowFullScreen>\n        </iframe>\n        <h2>{video.snippet.title}</h2>\n        <h3>{video.snippet.channelId}</h3>\n        <p>{video.snippet.description}</p>\n    </section>\n);\n\nexport default Videoplay;","import React, { useEffect, useState, useCallback } from 'react';\nimport './app.css';\nimport Contents from \"./components/contents\";\nimport Topbar from \"./components/topbar\";\nimport Videoplay from \"./components/videoplay\";\n\nfunction App({youtube}) {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  \n  const selectVideo = (video) =>{\n    setSelectedVideo(video)\n  }\n\n  const search = useCallback(\n    query=> {\n      setSelectedVideo(null);\n      youtube.search(query).then(videos=>setVideos(videos));\n    }, [youtube]);\n\n  useEffect(()=>{\n    youtube.mostPopular().then(videos=>setVideos(videos))\n  }, [youtube]);\n  \n  return (\n    <div className=\"content\">\n        <Topbar onSearch={search}/>\n        <section className=\"playzone\">\n        {selectedVideo && (\n          <div className=\"play\">\n            <Videoplay video={selectedVideo} />\n          </div>\n        )}\n          <div className=\"list\">\n            <Contents videos={videos} onVideoClick={selectVideo} display={selectedVideo ? 'list' : 'grid'}/>\n          </div>\n          \n        </section>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport Youtube from './service/youtube';\n\nconst youtube = new Youtube(process.env.React_APP_YOUTUBE_API_KEY)\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","import axios from 'axios';\n\nclass Youtube {\n    constructor(key){\n        this.youtube = axios.create({\n            baseURL : 'https://youtube.googleapis.com/youtube/v3',\n            params : {key: key}\n        })\n    }\n\n    async mostPopular(){\n        const response = await this.youtube.get('videos',{\n            params : {\n                part : 'snippet',\n                chart : 'mostPopular',\n                maxResults : 25\n            },\n        })\n        return response.data.items\n    }\n\n    async search(query) {\n        const response = await this.youtube.get('search', {\n            params : {\n                part : 'snippet',\n                maxResults : 25,\n                type : 'video',\n                q : query\n            }\n        })\n        return response.data.items.map(item => ({ ...item, id: item.id.videoId }));\n    }\n\n}\n\nexport default Youtube"],"sourceRoot":""}